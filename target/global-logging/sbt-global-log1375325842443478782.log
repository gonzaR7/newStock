[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\eduro\AppData\Local\Temp\idea2.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\eduro\AppData\Local\Temp\idea2.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.6 (Oracle Corporation Java 1.8.0_291)
[debug]       Load.loadUnit: plugins took 87.5986ms
[debug]       Load.loadUnit: defsScala took 0.2678ms
[debug] [Loading] Scanning directory C:\Users\eduro\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\eduro\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 15.34 ms
[debug]           Load.resolveProject(global-plugins) took 40.9535ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\eduro\.sbt\1.0\plugins, plugins: List(<none>))) took 162.9435ms
[debug] [Loading] Done in C:\Users\eduro\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 181.8652ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2199ms
[debug]     Load.loadUnit(file:/C:/Users/eduro/.sbt/1.0/plugins/, ...) took 276.9448ms
[debug]   Load.apply: load took 452.8252ms
[debug]   Load.apply: resolveProjects took 5.7752ms
[debug]   Load.apply: finalTransforms took 46.5747ms
[debug]   Load.apply: config.delegates took 7.2499ms
[debug]   Load.apply: Def.make(settings)... took 298.5173ms
[debug]   Load.apply: structureIndex took 77.875ms
[debug]   Load.apply: mkStreams took 1.7882ms
[info] loading global plugins from C:\Users\eduro\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2164.4634ms
[debug]           Load.loadUnit: plugins took 29.2965ms
[debug]           Load.loadUnit: defsScala took 0.0024ms
[debug] [Loading] Scanning directory E:\Escritorio\Work Things\Nova\LAR\newStock\project
[debug]             Load.loadUnit: mkEval took 8.9819ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\Escritorio\Work Things\Nova\LAR\newStock\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.69 ms
[info] loading settings for project newstock-build from plugins.sbt,idea2.sbt ...
[debug]               Load.resolveProject(newstock-build) took 2.7951ms
[debug]             Load.loadTransitive: finalizeProject(Project(id newstock-build, base: E:\Escritorio\Work Things\Nova\LAR\newStock\project, plugins: List(<none>))) took 5.0102ms
[debug] [Loading] Done in E:\Escritorio\Work Things\Nova\LAR\newStock\project, returning: (newstock-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 158.7114ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.36ms
[debug]         Load.loadUnit(file:/E:/Escritorio/Work%20Things/Nova/LAR/newStock/project/, ...) took 194.5538ms
[debug]       Load.apply: load took 195.8214ms
[debug]       Load.apply: resolveProjects took 0.1178ms
[debug]       Load.apply: finalTransforms took 6.6629ms
[debug]       Load.apply: config.delegates took 0.3609ms
[debug]       Load.apply: Def.make(settings)... took 83.3118ms
[debug]       Load.apply: structureIndex took 19.9074ms
[debug]       Load.apply: mkStreams took 0.0021ms
[info] loading project definition from E:\Escritorio\Work Things\Nova\LAR\newStock\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 565.3502ms
[debug]     Load.loadUnit: defsScala took 0.0019ms
[debug] [Loading] Scanning directory E:\Escritorio\Work Things\Nova\LAR\newStock
[debug]       Load.loadUnit: mkEval took 0.2244ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\Escritorio\Work Things\Nova\LAR\newStock, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtide.ConfigPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.1303 ms
[info] loading settings for project newstock from build.sbt ...
[debug]         Load.resolveProject(newstock) took 28.907ms
[debug]       Load.loadTransitive: finalizeProject(Project(id newstock, base: E:\Escritorio\Work Things\Nova\LAR\newStock, plugins: List(<none>))) took 32.0876ms
[debug] [Loading] Done in E:\Escritorio\Work Things\Nova\LAR\newStock, returning: (newstock)
[debug]     Load.loadUnit: loadedProjectsRaw took 212.1595ms
[debug]     Load.loadUnit: cleanEvalClasses took 13.4554ms
[debug]   Load.loadUnit(file:/E:/Escritorio/Work%20Things/Nova/LAR/newStock/, ...) took 791.5983ms
[debug] Load.apply: load took 792.9333ms
[debug] Load.apply: resolveProjects took 0.0969ms
[debug] Load.apply: finalTransforms took 18.308ms
[debug] Load.apply: config.delegates took 0.2832ms
[debug] Load.apply: Def.make(settings)... took 59.3508ms
[debug] Load.apply: structureIndex took 14.9187ms
[debug] Load.apply: mkStreams took 0.0023ms
[info] set current project to insert-newStock (in build file:/E:/Escritorio/Work%20Things/Nova/LAR/newStock/)
[warn] there are 2 keys that are not used by any other settings/tasks:
[warn]  
[warn] * newstock / idePackagePrefix
[warn]   +- E:\Escritorio\Work Things\Nova\LAR\newStock\build.sbt:11
[warn] * newstock / packageBin / mainClass
[warn]   +- E:\Escritorio\Work Things\Nova\LAR\newStock\build.sbt:13
[warn]  
[warn] note: a setting might still be used by a command; to exclude a key from this `lintUnused` check
[warn] either append it to `Global / excludeLintKeys` or call .withRank(KeyRanks.Invisible) on the key
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 54140 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 54140, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to insert-newStock (in build file:/E:/Escritorio/Work%20Things/Nova/LAR/newStock/)
[debug] > Exec(idea-shell, None, None)
